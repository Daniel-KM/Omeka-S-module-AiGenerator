<?php
/**
 * @var \Zend\View\Renderer\PhpRenderer $this
 * @var \Omeka\Form\ResourceForm $form
 * @var \Omeka\Api\Representation\AbstractResourceEntityRepresentation $resource
 * @var \Correction\Api\Representation\CorrectionRepresentation|null $correction
 * @var array $fields
 * @var string $action "edit"
 * @var string $submitLabel
 */

$translate = $this->plugin('translate');
$escape = $this->plugin('escapeHtml');
$escapeAttr = $this->plugin('escapeHtmlAttr');
$formElement = $this->plugin('formElement');
$form->prepare();

$labelInfo = $this->setting('property_label_information');
?>

<div class="pl-3">
    <?php // Template for the fields according to the datatype. ?>
    <div id="correct_value_template" class="uri" style="display:none;">
        <div class="value" lang="">
            <textarea data-value-key="@value" name="dcterms:title[__INDEX__][@value]" class="input-value form-control" aria-labelledby="property-__PROPERTYID__-label"></textarea>
        </div>
    </div>
    <div id="correct_uri_template" class="uri" style="display:none;">
        <div class="value" data-data-type="uri" role="group">
            <div class="input-body w-100">
                <div class="input">
                    <label class="value input-container">
                        <?= $translate('URI') ?>:
                        <input type="text" class="value to-require touched form-control" data-value-key="@uri" name="dcterms:title[__INDEX__][@uri]"/>
                    </label>
                </div>
                <div class="input">
                    <label class="value-label label-container">
                        <?= $translate('Label') ?>:
                        <textarea class="value-label touched form-control" rows="1" data-value-key="@label" name="dcterms:title[__INDEX__][@label]"></textarea>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <?= $this->form()->openTag($form) ?>

    <?php $this->trigger("view.$action.form.before", ['form' => $form]); ?>

    <?php // Display the corrected resource, with edited or non-edited fields, plus the non-editable original fields. ?>
    <?php foreach ($fields as $term => $field):
        $index = 0;
        $property = $field['property'];
        // Don't display empty values that are not fillable.
        if (empty($field['corrections']) && !$field['fillable']) continue;
        ?>

    <div class="property mb-3">
        <?php // Display property label. ?>
        <h4>
            <?= isset($field['alternate_label']) ? $escape($field['alternate_label']) : $escape($translate($property->label())) ?>
            <?php if ($labelInfo === 'term'): ?>
            <span class="field-term">(<?= $escape($field['property']->term()) ?>)</span>
            <?php elseif ($labelInfo === 'vocab'): ?>
            <span class="field-term">(<?= $escape($property->vocabulary()->label()) ?>)</span>
            <?php endif; ?>
        </h4>
        <div class="values">

        <?php // Simple display of the value for properties that are not editable. ?>
        <?php if (!$field['corrigible'] && !$field['fillable']): ?>
            <?php
            /** @var \Omeka\Api\Representation\ValueRepresentation $value */
            foreach ($field['values'] as $value):
                $valueType = $value->type();
                $isValueResource = strtok($valueType, ':') === 'resource';
                $isPrivate = method_exists($value, 'isPublic') && !$value->isPublic();
                $class = ['value'];
                if ($isValueResource):
                    $class[] = 'resource';
                    $class[] = $escape($value->valueResource()->resourceName());
                elseif ('uri' === $valueType):
                    $class[] = 'uri';
                endif;
                if ($isPrivate):
                    $class[] = 'private';
                endif;
                $language = $value->lang();
                ?>
            <div class="<?= implode(' ', $class) ?>" lang="<?= $escape($language) ?>">
                <?php if ($language): ?>
                <span class="language"><?= $language ?></span>
                <?php endif; ?>
                <?= $value->asHtml() ?>
            </div>
            <?php endforeach; ?>

        <?php // Editable fields, that may have been edited or not. ?>
        <?php else: ?>

           <?php foreach ($field['corrections'] as $fieldCorrection):
                /** @var \Omeka\Api\Representation\ValueRepresentation $value */
                $value = $fieldCorrection['original']['value'];
                if (!$value && !$field['fillable']) continue;

                $valueType = $fieldCorrection['type'];
                $isValueResource = strtok($valueType, ':') === 'resource';
                $original = $fieldCorrection['original'];
                $proposed = $fieldCorrection['proposed'];
                $isPrivate = $value && method_exists($value, 'isPublic') && !$value->isPublic();

                // Value that is not corrigible.
                if ($value && !$field['corrigible']):
                    $val = strlen($fieldCorrection['proposed']['@value']) ? $escape($fieldCorrection['proposed']['@value']) : $value->asHtml();
                    $class = ['value'];
                    if ($isValueResource):
                        $class[] = 'resource';
                        $class[] = $escape($value->valueResource()->resourceName());
                    elseif ('uri' === $valueType):
                        $class[] = 'uri';
                    endif;
                    if ($isPrivate):
                        $class[] = 'private';
                    endif;
                    $language = $value->lang();
                ?>
            <div class="<?= implode(' ', $class) ?>" lang="<?= $escape($language) ?>">
                <?php if ($language): ?>
                <span class="language"><?= $language ?></span>
                <?php endif; ?>
                <?= $value->asHtml() ?>
            </div>
                <?php

                // Value that is corrigible or fillable.
                else:
                    // TODO Manage all types of data, in particular custom vocab and value suggest.
                    switch ($valueType):
                    case 'uri':
                        $val = isset($proposed['@uri']) ? $proposed['@uri'] : $original['@uri'];
                        $label = isset($proposed['@uri']) ? $proposed['@label'] : $original['@label'];
                        ?>
            <div class="value uri <?= $isPrivate ? 'private' : '' ?>" data-data-type="uri" role="group" style="display: flex;">
                <div class="input-body w-100">
                    <div class="input">
                        <label class="value input-container">
                            <?= $translate('URI') ?>:
                            <input type="text" class="value to-require touched form-control" data-value-key="@id" name="<?= $term . '[' . $index . '][@uri]' ?> " value = "<?= $escapeAttr($val) ?>"/>
                        </label>
                    </div>
                    <div class="input">
                        <label class="value-label label-container">
                            <?= $translate('Label') ?>:
                            <textarea class="value-label touched form-control" rows="1" data-value-key="o:label" name="<?= $term . '[' . $index . '][@label]' ?>"><?= $escape($label) ?></textarea>
                        </label>
                    </div>
                </div>
            </div>
                    <?php

                    break;
                    // Resource are not editable currently.
                    case strtok($valueType, ':') === 'resource':
                    default: ?>
                    <?php if ($value): ?>
            <div class="value resource<?= $isPrivate ? ' private' : '' ?>">
                <?= $value ? $value->asHtml() : $proposed['@value'] ?>
            </div>
                    <?php endif; ?>
                    <?php

                    break;
                    case 'literal':
                        $val = isset($proposed['@value']) ? $proposed['@value'] : $original['@value'];
                        $class = ['value'];
                        if (strtok($valueType, ':') === 'resource'):
                            $class[] = 'resource';
                            $class[] = $value ? $escape($value->valueResource()->resourceName()) : '';
                        elseif ('uri' === $valueType):
                            $class[] = 'uri';
                        endif;
                        if ($isPrivate):
                            $class[] = 'private';
                        endif;
                        $language = isset($proposed['@value']) ? null : ($original['value'] ? $original['value']->lang() : null);
                        ?>
            <div class="<?= implode(' ', $class) ?>" lang="<?= $escape($language) ?>">
                <?php if ($language): ?>
                <span class="language"><?= $language ?></span>
                <?php endif; ?>
                <textarea data-value-key="@value" name="<?= $term . '[' . $index . '][@value]' ?>" class="input-value form-control" aria-labelledby="property-<?= $property->id() ?>-label"><?= $escape($val) ?></textarea>
            </div>
                    <?php
                    break;
                    endswitch;

                endif;
                ?>

            <?php ++$index; ?>
            <?php endforeach; ?>

            <?php // Add buttons to add a new value for fillable properties. ?>
            <?php if ($field['fillable']): ?>
        <div class="inputs">
            <div class="add-values default-selector" data-next-index="<?= $index ?>" data-next-term="<?= $term ?>">
                <?php if (in_array('literal', $field['datatype'])): ?>
                <div class="float-left o-icon-add add-value-new button"><?= $translate('Add value') ?></div>
                <?php endif; ?>
                <?php if (in_array('uri', $field['datatype'])): ?>
                <div class="float-left ml-3 add-value-uri button o-icon-uri" data-type="uri"><?= $translate('URI') ?></div>
                <?php endif; ?>
                <div class="clearfix"></div>
            </div>
        </div>
            <?php endif; ?>

        <?php endif; ?>
        </div>
    </div>
    <?php endforeach; ?>

    <?= $formElement($form->get('csrf')) ?>

    <?php $this->trigger("view.$action.form.after", ['form' => $form]); ?>

    <div id="page-actions">
        <?php // echo $this->cancelButton() ?>
        <?= $this->hyperlink($translate('Go back to resource'), $this->url('site/resource-id', ['controller' => $this->params()->fromRoute('resource'), 'action' => 'show'], true), ['class' => 'btn btn-danger text-light', 'role' => 'button']) ?>
        <button type="submit" name="correct-resource-submit" class="btn btn-primary"><?= $escape($submitLabel) ?></button>
    </div>

    <?= $this->form()->closeTag() ?>

    <?php // echo $this->partial('common/resource-form-templates.phtml') ?>
</div>
